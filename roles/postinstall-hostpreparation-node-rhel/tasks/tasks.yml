- name: Limpa subscricao
  shell: "subscription-manager unregister"
  ignore_errors: yes

- name: Subscreve
  shell: "subscription-manager register  --username={{ user }} --password={{ password }}"

- name: Refresh
  shell: "subscription-manager refresh"
    
- name: Anexa pool
  shell: "subscription-manager attach --pool={{ poolid }}"

- name: Desabilita repos
  shell: subscription-manager repos --disable="*"

#- name: Certifica yum repolist vazio
#  shell:  yum-config-manager --disable \*

- name: Habilita repos
  shell: subscription-manager repos --enable="rhel-7-server-rpms" --enable="rhel-7-server-extras-rpms" --enable="rhel-7-server-ose-3.11-rpms" --enable="rhel-7-server-ansible-2.6-rpms"

- name:  Instala pacotes necess√°rios
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - wget 
    - git 
    - net-tools 
    - bind-utils 
    - yum-utils 
    - iptables-services 
    - bridge-utils 
    - bash-completion 
    - kexec-tools 
    - sos 
    - psacct
    - nfs-utils

- name: Atualiza todos os pacotes
  yum:
    name: "*"
    state: latest

- name: Reboot...
  reboot:

- name: Instala Openshift Ansible
  yum:
   name: openshift-ansible
   state: latest

- name: Clona utilitarios ansible
  shell: "git clone https://github.com/redhatbsb/ocp-playbooks.git"
  ignore_errors: yes

- name: "Cria diretorio /home/{{ remote_user }}"
  file:
    path: "/home/{{ remote_user }}"
    state: directory
    owner: "{{ remote_user }}"
    mode: 0755
  

- name: Troca device do docker AWS t2.2xlarge
  lineinfile:
   path: "/home/{{ remote_user }}/ocp-playbooks/openshift/docker-storage-setup"
   regexp: "^DEVS="
   line: "DEVS=/dev/xvdb"
  when: machine_type_node == "t2.2xlarge"

- name: Troca device do docker AWS t2.large
  lineinfile:
   path: "/home/{{ remote_user }}/ocp-playbooks/openshift/docker-storage-setup"
   regexp: "^DEVS="
   line: "DEVS=/dev/xvdb"
  when: machine_type_node == "t2.large"



- name: Troca device do docker AWS t3.2xlarge
  lineinfile:
   path: "/home/{{ remote_user }}/ocp-playbooks/openshift/docker-storage-setup"
   regexp: "^DEVS="
   line: "DEVS=/dev/nvme1n1"
  when: machine_type_node == "t3.2xlarge"

- name: Troca device do docker para GCE
  lineinfile:
   path: "/home/{{ remote_user }}/ocp-playbooks/openshift/docker-storage-setup"
   regexp: "^DEVS="
   line: "DEVS=/dev/sdb"
  when: machine_type_node == "n1-standard-8"


- name: Copia chave
  copy:
   src: "{{ ansible_ssh_private_key_file }}"
   dest: "/home/{{ remote_user }}/.ssh/id_rsa"
   owner: "{{ remote_user }}"
   mode: 0400

- name: Cria diretorio /etc/ansible
  file:
    path: /etc/ansible
    state: directory
    owner: "{{ remote_user }}"
    mode: 0755

- name: Copia hosts
  template:
    src: "{{ role_path }}/files/scale-up-rhel.j2" 
    dest: /etc/ansible/hosts
    owner: "{{ remote_user }}"

- name: Copia ansible.cfg
  copy:
   src: "{{ role_path }}/files/ansible.cfg"
   dest: /etc/ansible/ansible.cfg
   owner: "{{ remote_user }}"

- name: Instala docker
  shell: "cd /home/{{ remote_user }}/ocp-playbooks/openshift/ && ansible-playbook /home/{{ remote_user }}/ocp-playbooks/openshift/docker-scaleup.yaml"
  become: no

- name: Faz join no cluster
  shell: "cd /usr/share/ansible/openshift-ansible/ && ansible-playbook playbooks/openshift-node/scaleup.yml"
  become: no

